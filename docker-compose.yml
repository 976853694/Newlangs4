version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: hl4_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: langs
      MYSQL_USER: langs
      MYSQL_PASSWORD: bUCpcxYW56J76tV6fGDw
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - hl4_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: hl4_redis
    restart: always
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf.template
    networks:
      - hl4_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./hl4-backend
      dockerfile: Dockerfile
    container_name: hl4_backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./docker/application.yml:/app/application.yml
    networks:
      - hl4_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  dashboard:
    build:
      context: ./hl4-dashboard
      dockerfile: Dockerfile
    container_name: hl4_dashboard
    restart: always
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - hl4_network

networks:
  hl4_network:
    driver: bridge

volumes:
  mysql_data:
    name: hl4_mysql_data
  redis_data:
    name: hl4_redis_data
